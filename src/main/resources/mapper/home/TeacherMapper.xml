<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtb.home.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.dtb.entity.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auth_state" jdbcType="TINYINT" property="authState" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dtb.entity.Teacher">
    <result column="paperwork_photos" jdbcType="LONGVARCHAR" property="paperworkPhotos" />
  </resultMap>
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithAssociation" type="com.dtb.entity.TeacherAssociation">
    <association property="user" column="user_id" select="com.dtb.home.dao.UserMapper.selectByPrimaryKey"></association>
    <association property="subject" column="subject_id" select="com.dtb.home.dao.SubjectMapper.selectByPrimaryKey"></association>
    <association property="admin" column="admin_id" select="com.dtb.home.dao.AdminMapper.selectByPrimaryKey"></association>
  </resultMap>

  <sql id="Base_Column_List">
    id, auth_state, user_id, admin_id, subject_id, reason, create_time, delete_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    paperwork_photos
  </sql>


  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="ResultMapWithAssociation">
    SELECT
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    FROM as_teacher
    WHERE user_id = #{userId,jdbcType=INTEGER}
    AND delete_time IS NULL
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithAssociation">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from as_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from as_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.dtb.entity.Teacher">
    insert into as_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="authState != null">
        auth_state,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="reason != null">
        reason,
      </if>
        create_time,
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="paperworkPhotos != null">
        paperwork_photos,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="authState != null">
        #{authState,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
        CURRENT_TIMESTAMP,
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paperworkPhotos != null">
        #{paperworkPhotos,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dtb.entity.Teacher">
    update as_teacher
    <set>
      <if test="authState != null">
        auth_state = #{authState,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paperworkPhotos != null">
        paperwork_photos = #{paperworkPhotos,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dtb.entity.Teacher">
    update as_teacher
    set auth_state = #{authState,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      paperwork_photos = #{paperworkPhotos,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dtb.entity.Teacher">
    update as_teacher
    set auth_state = #{authState,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>